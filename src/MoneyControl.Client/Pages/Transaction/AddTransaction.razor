@using MoneyControl.Shared.Models
@using MoneyControl.Shared.Queries.Transaction.CreateTransaction
@inject HttpClient Http

<div class="mb-3">
    <label for="chooseAccount">Choose Account name:</label>
    <select id="chooseAccount" @bind="@AccountId" class="form-select">
        @foreach (var item in _accounts)
        {
            <option value="@item.Id">@item.Name</option>
        }
    </select>
</div>

<div class="mb-3">
    <label for="sum">Enter the sum:</label>
    <input id="sum" class="form-control" placeholder="Sum" @onchange="@(x => Sum = Convert.ToDouble(x.Value))">
</div>

<div>
    <button class="btn btn-primary" @onclick="@CreateTransactionAsync">Add</button>
</div>

@code {
    private List<AccountModel>? _accounts = new();
    public int AccountId { get; set; }
    public double Sum { get; set; }
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        _accounts = await Http.GetFromJsonAsync<List<AccountModel>>("account");
    }

    private async Task CreateTransactionAsync()
    {
        await Http.PostAsJsonAsync("transaction/create", new CreateTransactionCommand
        {
            AccountId = AccountId,
            Sum = Sum
        });

        await BlazoredModal.CloseAsync();
    }

}